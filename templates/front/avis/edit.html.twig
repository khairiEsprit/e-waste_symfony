{% extends 'front/base.html.twig' %}

{% block title %}Modifier Avis{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>

        /* Custom file upload styling */
        .custom-file-input::-webkit-file-upload-button {
            visibility: hidden;
            width: 0;
        }

        .custom-file-input::before {
            content: 'Choisir une image';
            display: inline-block;
            background: linear-gradient(145deg, var(--primary-medium), var(--primary-dark));
            color: white;
            border-radius: var(--radius-pill);
            padding: 8px 20px;
            outline: none;
            white-space: nowrap;
            cursor: pointer;
            font-weight: 600;
            font-size: 0.9rem;
            margin-right: 10px;
            transition: var(--transition-normal);
        }

        .custom-file-input:hover::before {
            background: linear-gradient(145deg, var(--primary-dark), var(--primary-medium));
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .current-image {
            padding: 15px;
            border-radius: var(--radius-md);
            background-color: rgba(0, 105, 62, 0.05);
            border: 1px dashed var(--primary-medium);
        }

        /* Card styling is handled by the unified theme */

        /* Button styling */
        .btn-back {
            background: white;
            color: var(--primary-dark);
            border: 2px solid var(--primary-dark);
            padding: 10px 25px;
            border-radius: var(--radius-pill);
            transition: var(--transition-normal);
            font-weight: 600;
            display: inline-flex;
            align-items: center;
        }

        .btn-back:hover {
            background: var(--primary-dark);
            color: white;
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

        .btn-update {
            background: var(--primary-medium);
            color: white;
            padding: 12px 30px;
            border-radius: var(--radius-pill);
            transition: var(--transition-normal);
            font-weight: 600;
            border: none;
            display: inline-flex;
            align-items: center;
            box-shadow: var(--shadow-sm);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-update:hover {
            background: var(--primary-dark);
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

        .btn-delete {
            background: white;
            color: var(--danger);
            border: 2px solid var(--danger);
            padding: 10px 25px;
            border-radius: var(--radius-pill);
            transition: var(--transition-normal);
            font-weight: 600;
            display: inline-flex;
            align-items: center;
        }

        .btn-delete:hover {
            background: var(--danger);
            color: white;
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

        /* Form styling */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-control {
            border-radius: var(--radius-md);
            border: 1px solid #000; /* Black border */
            padding: 12px 15px;
            transition: var(--transition-normal);
            color: #000; /* Black text */
        }

        .form-control:focus {
            border-color: var(--primary-medium);
            box-shadow: 0 0 0 0.25rem rgba(0, 105, 62, 0.15);
        }

        .form-label {
            font-weight: 600;
            color: #000; /* Black text */
            margin-bottom: 8px;
        }

        /* SweetAlert styling */
        .swal2-popup {
            border-radius: var(--radius-lg) !important;
            font-family: var(--font-family-base) !important;
            box-shadow: var(--shadow-lg) !important;
        }

        .swal2-title {
            color: var(--text-dark) !important;
            font-size: 1.5rem !important;
            font-weight: 600 !important;
        }

        .swal2-html-container {
            color: var(--text-medium) !important;
            font-size: 1.1rem !important;
        }

        .swal2-confirm {
            background-color: var(--primary-medium) !important;
            border: none !important;
            padding: 10px 25px !important;
            border-radius: var(--radius-pill) !important;
            font-weight: 600 !important;
            transition: var(--transition-normal) !important;
        }

        .swal2-confirm:hover {
            background-color: var(--primary-dark) !important;
            transform: translateY(-2px) !important;
            box-shadow: var(--shadow-md) !important;
        }

        .swal2-cancel {
            border: 2px solid var(--text-dark) !important;
            color: var(--text-dark) !important;
            padding: 10px 25px !important;
            border-radius: var(--radius-pill) !important;
            font-weight: 600 !important;
            transition: var(--transition-normal) !important;
        }

        .swal2-cancel:hover {
            background-color: var(--light) !important;
            transform: translateY(-2px) !important;
            box-shadow: var(--shadow-sm) !important;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .card-body {
                padding: 20px;
            }

            .card-footer {
                flex-direction: column;
                gap: 10px;
            }

            .btn-back {
                width: 100%;
                justify-content: center;
                margin-bottom: 10px;
            }

            .btn-group {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Fonction pour confirmer la suppression
        function confirmDelete(event) {
            event.preventDefault();
            const form = event.target.closest('form');

            Swal.fire({
                title: 'Confirmer la suppression',
                html: 'Êtes-vous sûr de vouloir supprimer cet avis ?<br><small>Cette action est irréversible</small>',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: 'var(--red)',
                cancelButtonColor: 'var(--dark-gray)',
                confirmButtonText: 'Oui, supprimer',
                cancelButtonText: 'Annuler',
                customClass: {
                    popup: 'swal2-popup',
                    title: 'swal2-title',
                    htmlContainer: 'swal2-html-container',
                    confirmButton: 'swal2-confirm',
                    cancelButton: 'swal2-cancel'
                },
                buttonsStyling: false,
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        }

        // Fonction pour confirmer la modification
        function confirmUpdate(event) {
            event.preventDefault();
            const form = event.target.closest('form');

            Swal.fire({
                title: 'Confirmer la modification',
                html: 'Voulez-vous vraiment enregistrer les modifications apportées à cet avis ?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: 'var(--medium-green)',
                cancelButtonColor: 'var(--dark-gray)',
                confirmButtonText: 'Oui, enregistrer',
                cancelButtonText: 'Annuler',
                customClass: {
                    popup: 'swal2-popup',
                    title: 'swal2-title',
                    htmlContainer: 'swal2-html-container',
                    confirmButton: 'swal2-confirm',
                    cancelButton: 'swal2-cancel'
                },
                buttonsStyling: false,
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        }

        // Attacher l'événement au formulaire de modification
        document.addEventListener('DOMContentLoaded', function() {
            const updateForm = document.querySelector('form[name="avi"]');
            if (updateForm) {
                updateForm.addEventListener('submit', confirmUpdate);
            }
        });
    </script>
{% endblock %}

{% block body %}
    <div class="full-page-bg"></div>
    <section class="content-wrapper py-5">
        <div class="container mb-5 mt-4">
            <h1 class="section-title text-white animate-fade-in">Modifier l'avis</h1>

            <div class="card-custom animate-slide-up" style="border: 1px solid #000; margin-bottom: 2rem;">
                <div class="card-header" style="background: linear-gradient(145deg, var(--primary-medium), var(--primary-dark)); color: white;">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-edit me-2"></i>
                        Avis #{{ avi.id }}
                    </h5>
                </div>

                <div class="card-body">
                    {{ form_start(form, {'attr': {'class': 'edit-form'}}) }}
                        <div class="form-group">
                            {{ form_label(form.nom, 'Nom', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.avis, 'Avis', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.avis, {'attr': {'class': 'form-control', 'rows': 5}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.note, 'Note', {'label_attr': {'class': 'form-label'}}) }}
                            <div class="star-rating">
                                {% for i in 1..5 %}
                                    <i class="far fa-star star-selector" data-value="{{ i }}" style="font-size: 1.8rem; cursor: pointer; margin-right: 5px; color: {{ i <= form.note.vars.value ? '#FFC107' : '#E0E0E0' }}"></i>
                                {% endfor %}
                                {{ form_widget(form.note, {'attr': {'class': 'd-none'}}) }}
                            </div>
                        </div>

                        <div class="form-group">
                            {{ form_label(form.image, 'Image (optionnel)', {'label_attr': {'class': 'form-label'}}) }}
                            <div class="custom-file-upload">
                                {{ form_widget(form.image, {'attr': {'class': 'form-control custom-file-input'}}) }}
                                <small class="form-text text-muted">Formats acceptés: JPEG, PNG, GIF. Taille max: 5 Mo.</small>

                                {% if avi.image %}
                                <div class="current-image mt-3">
                                    <p class="mb-2"><strong>Image actuelle:</strong></p>
                                    <img src="{{ asset('uploads/avis/' ~ avi.image) }}" alt="Image de l'avis" class="img-fluid rounded" style="max-height: 200px; max-width: 100%;">
                                    <p class="text-muted mt-2 small">Téléchargez une nouvelle image pour remplacer celle-ci.</p>
                                </div>
                                {% endif %}

                                <div class="file-preview mt-3 d-none" id="image-preview-container">
                                    <p class="mb-2"><strong>Nouvelle image:</strong></p>
                                    <img id="image-preview" src="#" alt="Aperçu de l'image" class="img-fluid rounded" style="max-height: 200px; max-width: 100%;">
                                    <button type="button" class="btn btn-sm btn-outline-danger mt-2" id="remove-image-btn">
                                        <i class="fas fa-times"></i> Annuler
                                    </button>
                                </div>
                            </div>
                            {{ form_errors(form.image, {'attr': {'class': 'text-danger mt-2'}}) }}
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <button type="submit" class="btn btn-update">
                                <i class="fas fa-save me-2"></i> Mettre à jour
                            </button>
                        </div>
                    {{ form_end(form) }}
                </div>

                <div class="card-footer">
                    <a href="{{ path('app_avis_index') }}" class="btn-back">
                        <i class="fas fa-arrow-left me-2"></i> Retour à la liste
                    </a>

                    <form method="post" action="{{ path('app_avis_delete', {'id': avi.id}) }}" onsubmit="return false;" class="d-inline">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ avi.id) }}">
                        <button class="btn-delete" onclick="confirmDelete(event)">
                            <i class="fas fa-trash me-2"></i> Supprimer
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </section>

    <script>
        // Script pour la sélection des étoiles
        document.querySelectorAll('.star-selector').forEach(star => {
            star.addEventListener('click', function() {
                const value = this.getAttribute('data-value');
                document.getElementById('{{ form.note.vars.id }}').value = value;

                document.querySelectorAll('.star-selector').forEach(s => {
                    s.style.color = s.getAttribute('data-value') <= value ? '#FFC107' : '#E0E0E0';
                    s.classList.toggle('far', s.getAttribute('data-value') > value);
                    s.classList.toggle('fas', s.getAttribute('data-value') <= value);
                });
            });
        });

        // Script pour l'aperçu de l'image
        document.addEventListener('DOMContentLoaded', function() {
            const imageInput = document.querySelector('input[type="file"]');
            const previewContainer = document.getElementById('image-preview-container');
            const imagePreview = document.getElementById('image-preview');
            const removeButton = document.getElementById('remove-image-btn');

            if (imageInput && previewContainer && imagePreview && removeButton) {
                // Afficher l'aperçu lorsqu'une image est sélectionnée
                imageInput.addEventListener('change', function() {
                    if (this.files && this.files[0]) {
                        const reader = new FileReader();

                        reader.onload = function(e) {
                            imagePreview.src = e.target.result;
                            previewContainer.classList.remove('d-none');
                        }

                        reader.readAsDataURL(this.files[0]);
                    }
                });

                // Supprimer l'image lorsque le bouton est cliqué
                removeButton.addEventListener('click', function() {
                    imageInput.value = '';
                    previewContainer.classList.add('d-none');
                    imagePreview.src = '#';
                });
            }
        });
    </script>
{% endblock %}