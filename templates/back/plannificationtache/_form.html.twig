<!DOCTYPE html>
<html>
<head>
    <!-- Import Poppins font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
</head>
<body>
    <div class="container px-3 my-5">
        {{ form_start(form, {'attr': {'class': 'needs-validation custom-form-style', 'novalidate': ''}}) }}
        <div class="row g-3">
            {% for field in form %}
                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(field, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        {{ form_widget(field, {'attr': {'class': 'form-control' ~ (form_errors(field) ? ' is-invalid' : ''), 'required': 'required'}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(field) }}
                        </div>
                        {% if field.vars.help is defined and field.vars.help %}
                            <small class="form-text text-muted">{{ field.vars.help }}</small>
                        {% endif %}
                    </div>
                </div>
            {% endfor %}
        </div>
        <div class="mt-4 text-center">
            <button class="btn btn-primary-custom" type="submit" id="submitBtn">
                {{ button_label|default('Enregistrer') }}
            </button>
        </div>
        {{ form_end(form) }}
    </div>

    {# Loading Overlay #}
    <div id="loadingOverlay" class="position-fixed top-0 start-0 w-100 h-100 d-none" style="z-index: 9999; background-color: rgba(255,255,255,0.5); backdrop-filter: blur(4px);">
        <div class="d-flex justify-content-center align-items-center h-100">
            <div class="spinner-border text-primary-custom" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

    {# Notification Toast #}
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="formToast" class="toast align-items-center text-white bg-primary-custom border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="bi bi-exclamation-circle me-2"></i>
                    <span id="toastMessage"></span>
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const toastEl = document.getElementById('formToast');
        const toastMessage = document.getElementById('toastMessage');
        const toast = new bootstrap.Toast(toastEl, {
            autohide: true,
            delay: 5000
        });

        const form = document.querySelector('.needs-validation');
        const submitBtn = document.getElementById('submitBtn');
        const loadingOverlay = document.getElementById('loadingOverlay');

        // Real-time required field validation
        document.querySelectorAll('.form-control').forEach(function(input) {
            input.addEventListener('input', function() {
                if (input.value.trim() !== '') {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                }
            });

            input.addEventListener('blur', function() {
                if (input.value.trim() === '') {
                    input.classList.add('is-invalid');
                    toastMessage.textContent = 'Ce champ est requis';
                    toast.show();
                }
            });
        });

        // Form submission with loading state
        form.addEventListener('submit', function(event) {
            // Check if all required fields are filled
            let allFilled = true;
            document.querySelectorAll('.form-control[required]').forEach(input => {
                if (input.value.trim() === '') {
                    allFilled = false;
                    input.classList.add('is-invalid');
                }
            });

            if (!allFilled) {
                event.preventDefault();
                toastMessage.textContent = 'Veuillez remplir tous les champs requis';
                toast.show();
                return;
            }

            // Show loading overlay
            submitBtn.disabled = true;
            loadingOverlay.classList.remove('d-none');
        });
    });
    </script>

    <style>
        /* Apply Poppins to all elements */
        body, .form-control, .form-label, .btn, .toast-body, .invalid-feedback, .form-text {
            font-family: 'Poppins', sans-serif;
        }
        
        /* Custom form styling - identical to your first design */
        .custom-form-style {
            border: 2px solid transparent;
            border-radius: 15px;
            background: linear-gradient(white, white) padding-box,
                        linear-gradient(135deg, #6c5ce7, #a29bfe, #6c5ce7) border-box;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(108, 92, 231, 0.1);
            margin-top: 2rem;
        }
        
        /* Primary color (purple) scheme matching your first design */
        :root {
            --primary-color: #29ab87;
            --primary-dark: #00693e;
            --primary-light: #a29bfe;
        }
        
        .form-control.is-valid {
            border-color: #00b894;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2300b894' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
        }
        
        .form-control.is-invalid {
            border-color: #d63031;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23d63031'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23d63031' stroke='none'/%3e%3c/svg%3e");
        }
        
        .btn-primary-custom {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            transition: all 0.3s ease;
            padding: 0.5rem 2rem;
            font-weight: 500;
            color: white;
        }
        
        .btn-primary-custom:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.3);
        }
        
        .text-primary-custom {
            color: var(--primary-color) !important;
        }
        
        .bg-primary-custom {
            background-color: var(--primary-color) !important;
        }
        
        .toast {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            border-radius: 0.5rem;
        }

        /* Animation for the spinner */
        @keyframes spinner-border {
            to { transform: rotate(360deg); }
        }
        
        .spinner-border {
            display: inline-block;
            width: 2rem;
            height: 2rem;
            vertical-align: text-bottom;
            border: 0.25em solid currentColor;
            border-right-color: transparent;
            border-radius: 50%;
            animation: spinner-border .75s linear infinite;
        }
        
        /* Form labels styling */
        .form-label {
            color: #2d3436;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }
        
        /* Input focus effect */
        .form-control:focus {
            border-color: var(--primary-light);
            box-shadow: 0 0 0 0.25rem rgba(108, 92, 231, 0.25);
        }
        
        /* Style for disabled button */
        #submitBtn:disabled {
            cursor: not-allowed;
            opacity: 0.65;
            transform: none !important;
            box-shadow: none !important;
        }
        
        /* Container adjustments */
        .container {
            max-width: 900px;
        }
    </style>
</body>
</html>