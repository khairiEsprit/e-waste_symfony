{% extends 'back/base.html.twig' %}

{% block title %}Dashboard - E-Waste Admin{% endblock %}

{% block content %}
<div class="container-fluid py-4">
    <!-- Stats Cards Section -->
    <div class="row">
        <div class="col-lg-3 col-6">
            <div class="small-box" style="background: linear-gradient(135deg, var(--primary-dark), var(--primary-medium)); color: white;">
                <div class="inner">
                    <h3>150</h3>
                    <p>Reclamations</p>
                </div>
                <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path d="M2.25 2.25a.75.75 0 000 1.5h1.386c.17 0 .318.114.362.278l2.558 9.592a3.752 3.752 0 00-2.806 3.63c0 .414.336.75.75.75h15.75a.75.75 0 000-1.5H5.378A2.25 2.25 0 017.5 15h11.218a.75.75 0 00.674-.421 60.358 60.358 0 002.96-7.228.75.75 0 00-.525-.965A60.864 60.864 0 005.68 4.509l-.232-.867A1.875 1.875 0 003.636 2.25H2.25zM3.75 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM16.5 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"></path>
                </svg>
                <a href="{{ path('app_traitement_index') }}" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                    More info <i class="bi bi-arrow-right-circle-fill"></i>
                </a>
            </div>
        </div>

        <div class="col-lg-3 col-6">
            <div class="small-box" style="background: linear-gradient(135deg, var(--primary-medium), var(--primary-light)); color: white;">
                <div class="inner">
                    <h3>53<sup class="fs-5">%</sup></h3>
                    <p>Poubelles</p>
                </div>
                <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path d="M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75zM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 01-1.875-1.875V8.625zM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 013 19.875v-6.75z"></path>
                </svg>
                <a href="{{ path('app_poubelle_index') }}" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                    More info <i class="bi bi-arrow-right-circle-fill"></i>
                </a>
            </div>
        </div>

        <div class="col-lg-3 col-6">
            <div class="small-box" style="background: linear-gradient(135deg, #ACE1AF, #E8F5E9); color: var(--primary-dark);">
                <div class="inner">
                    <h3>44</h3>
                    <p>User Registrations</p>
                </div>
                <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path d="M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z"></path>
                </svg>
                <a href="#users-section" class="small-box-footer link-dark link-underline-opacity-0 link-underline-opacity-50-hover">
                    More info <i class="bi bi-arrow-right-circle-fill"></i>
                </a>
            </div>
        </div>

        <div class="col-lg-3 col-6">
            <div class="small-box" style="background: linear-gradient(135deg, #2e7d32, #4caf50); color: white;">
                <div class="inner">
                    <h3>65</h3>
                    <p>Centres</p>
                </div>
                <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path d="M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z" />
                    <path fill-rule="evenodd" d="M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z" clip-rule="evenodd" />
                    <path d="M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z" />
                </svg>
                <a href="{{ path('app_centre_index') }}" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                    More info <i class="bi bi-arrow-right-circle-fill"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- Users Table Section -->
    <div class="row mt-4" id="users-section">
        <div class="col-12">
            <div class="admin-card">
                <div class="card-header">
                    <h4 class="m-0">
                        <i class="bi bi-people-fill me-2"></i>
                        Users Management
                    </h4>
                    <div class="search-container">
                        <input type="text"
                               name="search"
                               id="userSearch"
                               class="form-control"
                               placeholder="Search users..."
                               value="{{ searchTerm|default('') }}">
                        <i class="bi bi-search"></i>
                    </div>
                </div>

                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="admin-table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th class="px-3">ID</th>
                                    <th>Profile</th>
                                    <th>Full Name</th>
                                    <th>Email</th>
                                    <th>Roles</th>
                                    <th>Created At</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% if users|length > 0 %}
                                {% for user in users %}
                                <tr>
                                    <td class="px-3">{{ user.id }}</td>
                                    <td>
                                        <img src="{{ user.profileImage ? user.profileImage : asset('assets/back/assets/img/avatar.png') }}"
                                             alt="User Avatar"
                                             class="rounded-circle"
                                             style="width: 40px; height: 40px; object-fit: cover;">
                                    </td>
                                    <td>
                                        <strong>{{ user.firstName }} {{ user.lastName }}</strong>
                                    </td>
                                    <td>{{ user.email }}</td>
                                    <td>
                                        {% for role in user.roles %}
                                            <span class="badge" style="background-color: var(--primary-medium);">{{ role }}</span>
                                        {% endfor %}
                                    </td>
                                    <td>{{ user.createdAt ? user.createdAt|date('d/m/Y H:i') : 'N/A' }}</td>
                                    <td class="text-center">
                                        <div class="action-buttons">
                                            <button type="button"
                                                    class="btn btn-sm btn-outline-primary show-user-btn"
                                                    data-user-id="{{ user.id }}"
                                                    data-user-firstname="{{ user.firstName }}"
                                                    data-user-lastname="{{ user.lastName }}"
                                                    data-user-email="{{ user.email }}"
                                                    data-user-roles="{{ user.roles|json_encode }}"
                                                    data-user-created="{{ user.createdAt ? user.createdAt|date('Y-m-d H:i') : 'N/A' }}"
                                                    data-user-image="{{ user.profileImage ? user.profileImage : asset('assets/back/assets/img/avatar.png') }}"
                                                    data-bs-toggle="tooltip"
                                                    data-bs-title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            <a href="{{ path('back_user_delete', {'id': user.id}) }}"
                                               class="btn btn-sm btn-outline-danger delete-user"
                                               data-bs-toggle="tooltip"
                                               data-bs-title="Delete User">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                {% endfor %}
                            {% else %}
                                <tr>
                                    <td colspan="7" class="text-center py-5">
                                        <div class="d-flex flex-column align-items-center">
                                            <i class="bi bi-people text-muted" style="font-size: 3rem;"></i>
                                            <p class="mt-3 mb-1 fw-bold">No users found</p>
                                            <p class="text-muted">Users will appear here once they register</p>
                                        </div>
                                    </td>
                                </tr>
                            {% endif %}
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer bg-light d-flex justify-content-between align-items-center">
                    <div>
                        <small class="text-muted">Total: {{ users|length }} user(s)</small>
                    </div>
                    <ul class="pagination pagination-sm m-0">
                        <li class="page-item {{ currentPage <= 1 ? 'disabled' : '' }}">
                            <a class="page-link pagination-link" href="#" data-page="{{ currentPage - 1 }}" {{ currentPage <= 1 ? 'disabled' : '' }}>«</a>
                        </li>

                        {% for i in 1..maxPages %}
                            <li class="page-item {{ currentPage == i ? 'active' : '' }}">
                                <a class="page-link pagination-link" href="#" data-page="{{ i }}">{{ i }}</a>
                            </li>
                        {% endfor %}

                        <li class="page-item {{ currentPage >= maxPages ? 'disabled' : '' }}">
                            <a class="page-link pagination-link" href="#" data-page="{{ currentPage + 1 }}" {{ currentPage >= maxPages ? 'disabled' : '' }}>»</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

    <!-- User Modal -->
    <div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header" style="background-color: var(--primary-dark); color: white;">
                    <h5 class="modal-title" id="userModalLabel">
                        <i class="bi bi-person-circle me-2"></i>
                        User Details
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4 text-center mb-3">
                            <img id="userModalImage" src="" alt="User Avatar" class="rounded-circle" style="width: 150px; height: 150px; object-fit: cover; border: 3px solid var(--primary-medium);">
                        </div>
                        <div class="col-md-8">
                            <form id="userEditForm">
                                <div class="mb-3">
                                    <label for="firstName" class="form-label"><i class="bi bi-person me-1"></i> First Name</label>
                                    <input type="text" class="form-control" id="firstName" name="firstName">
                                </div>
                                <div class="mb-3">
                                    <label for="lastName" class="form-label"><i class="bi bi-person me-1"></i> Last Name</label>
                                    <input type="text" class="form-control" id="lastName" name="lastName">
                                </div>
                                <div class="mb-3">
                                    <label for="email" class="form-label"><i class="bi bi-envelope me-1"></i> Email</label>
                                    <input type="email" class="form-control" id="email" name="email">
                                </div>
                                <div class="mb-3">
                                    <label for="roles" class="form-label"><i class="bi bi-shield-lock me-1"></i> Roles</label>
                                    <input type="text" class="form-control" id="roles" readonly>
                                </div>
                                <div class="mb-3">
                                    <label for="createdAt" class="form-label"><i class="bi bi-calendar-date me-1"></i> Created At</label>
                                    <input type="text" class="form-control" id="createdAt" readonly>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle me-1"></i> Close
                    </button>
                    <button type="button" class="btn btn-outline-success" id="saveUserChanges">
                        <i class="bi bi-check-circle me-1"></i> Save changes
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Activer les tooltips Bootstrap
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

        let currentUserId = null;
        let userModal = null;

        // Initialize the modal
        userModal = new bootstrap.Modal(document.getElementById('userModal'));

        // Show user modal
        document.querySelectorAll('.show-user-btn').forEach(button => {
            button.addEventListener('click', function() {
                const userData = this.dataset;
                currentUserId = userData.userId;

                document.getElementById('userModalImage').src = userData.userImage;
                document.getElementById('firstName').value = userData.userFirstname;
                document.getElementById('lastName').value = userData.userLastname;
                document.getElementById('email').value = userData.userEmail;
                document.getElementById('roles').value = userData.userRoles;
                document.getElementById('createdAt').value = userData.userCreated;

                userModal.show();
            });
        });

        // Delete user confirmation with SweetAlert2
        document.querySelectorAll('.delete-user').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const deleteUrl = this.getAttribute('href');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#00693E',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = deleteUrl;
                    }
                });
            });
        });

        // Save user changes with SweetAlert2
        document.getElementById('saveUserChanges').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('userEditForm'));

            Swal.fire({
                title: 'Saving changes...',
                html: '<i class="bi bi-arrow-repeat fa-spin me-2"></i>Please wait...',
                didOpen: () => {
                    Swal.showLoading();
                },
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                backdrop: `
                    rgba(0,105,62,0.4)
                    url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_P7sC%7Banimation:spinner_svv2 1.5s cubic-bezier(0.5,0,0.5,1) infinite%7D.spinner_P7sC circle%7Bstroke:%2300693E;stroke-linecap:round%7D@keyframes spinner_svv2%7B0%25%7Btransform:rotate(0deg)%7D100%25%7Btransform:rotate(360deg)%7D%7D%3C/style%3E%3Cg class='spinner_P7sC'%3E%3Ccircle cx='12' cy='12' r='10' fill='none' stroke-width='2'/%3E%3C/g%3E%3C/svg%3E")
                    center center no-repeat
                `
            });

            fetch(`/admin/user/${currentUserId}/edit`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'User updated successfully',
                        timer: 1500,
                        showConfirmButton: false,
                        background: '#fff',
                        iconColor: '#00693E'
                    }).then(() => {
                        userModal.hide();
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: data.message || 'Error updating user',
                        confirmButtonColor: '#00693E'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'An error occurred while updating the user',
                    confirmButtonColor: '#00693E'
                });
            });
        });

        // Live search functionality with debounce
        let searchTimeout;
        const searchInput = document.getElementById('userSearch');
        const tbody = document.querySelector('.admin-table tbody');

        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            const searchTerm = this.value;

            searchTimeout = setTimeout(() => {
                fetch(`{{ path('back_dashboard') }}?search=${encodeURIComponent(searchTerm)}`, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    tbody.innerHTML = html;
                    // Reinitialize buttons and tooltips for new content
                    initializeButtons();
                })
                .catch(error => console.error('Error:', error));
            }, 300); // 300ms delay to prevent too many requests
        });

        // Function to initialize all interactive elements
        function initializeButtons() {
            // Initialize tooltips
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

            // Initialize modal buttons
            document.querySelectorAll('.show-user-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const userData = this.dataset;
                    currentUserId = userData.userId;

                    document.getElementById('userModalImage').src = userData.userImage;
                    document.getElementById('firstName').value = userData.userFirstname;
                    document.getElementById('lastName').value = userData.userLastname;
                    document.getElementById('email').value = userData.userEmail;
                    document.getElementById('roles').value = userData.userRoles;
                    document.getElementById('createdAt').value = userData.userCreated;

                    userModal.show();
                });
            });

            // Initialize delete buttons
            document.querySelectorAll('.delete-user').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const deleteUrl = this.getAttribute('href');

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#00693E',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = deleteUrl;
                        }
                    });
                });
            });
        }

        // Initialize all buttons for initial content
        initializeButtons();

        // Pagination click handler
        document.addEventListener('click', function(e) {
            if (e.target.matches('.pagination-link') && !e.target.hasAttribute('disabled')) {
                e.preventDefault();
                const page = e.target.dataset.page;
                const searchTerm = document.getElementById('userSearch').value;

                fetch(`{{ path('back_dashboard') }}?page=${page}&search=${encodeURIComponent(searchTerm)}`, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    document.querySelector('.admin-table tbody').innerHTML = html;

                    // Update pagination links
                    document.querySelectorAll('.page-item').forEach(item => {
                        const link = item.querySelector('.pagination-link');
                        if (link) {
                            // Update active state
                            item.classList.toggle('active', link.dataset.page === page);

                            // Update prev/next buttons
                            if (link.textContent === '«') {
                                link.dataset.page = parseInt(page) - 1;
                                item.classList.toggle('disabled', parseInt(page) <= 1);
                            } else if (link.textContent === '»') {
                                link.dataset.page = parseInt(page) + 1;
                                // Get the total number of pages from the pagination
                                const totalPages = document.querySelectorAll('.pagination-link:not([data-page="prev"]):not([data-page="next"])').length || 1;
                                item.classList.toggle('disabled', parseInt(page) >= totalPages);
                            }
                        }
                    });

                    initializeButtons();
                })
                .catch(error => console.error('Error:', error));
            }
        });
    });
    </script>
{% endblock %}