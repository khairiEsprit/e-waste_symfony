{% extends 'back/base.html.twig' %}

{% block title %}Dashboard - AdminLTE{% endblock %}

{% block content %}
    <!--begin::App Content Header-->
    <div class="app-content-header">
        <!--begin::Container-->
        <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
                <div class="col-sm-6"><h3 class="mb-0">Dashboard</h3></div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-end">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
                    </ol>
                </div>
            </div>
            <!--end::Row-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::App Content Header-->
    <!--begin::App Content-->
    <div class="app-content">
        <!--begin::Container-->
        <div class="container-fluid">
            <!-- Small boxes section -->
            <div class="row">
                <!-- Your existing stat boxes here -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box text-bg-primary">
                        <div class="inner">
                            <h3>150</h3>
                            <p>Reclamations</p>
                        </div>
                        <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                            <path d="M2.25 2.25a.75.75 0 000 1.5h1.386c.17 0 .318.114.362.278l2.558 9.592a3.752 3.752 0 00-2.806 3.63c0 .414.336.75.75.75h15.75a.75.75 0 000-1.5H5.378A2.25 2.25 0 017.5 15h11.218a.75.75 0 00.674-.421 60.358 60.358 0 002.96-7.228.75.75 0 00-.525-.965A60.864 60.864 0 005.68 4.509l-.232-.867A1.875 1.875 0 003.636 2.25H2.25zM3.75 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM16.5 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"></path>
                        </svg>
                        <a href="#" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box text-bg-success">
                        <div class="inner">
                            <h3>53<sup class="fs-5">%</sup></h3>
                            <p>Trashs</p>
                        </div>
                        <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                            <path d="M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75zM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 01-1.875-1.875V8.625zM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 013 19.875v-6.75z"></path>
                        </svg>
                        <a href="#" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box text-bg-warning">
                        <div class="inner">
                            <h3>44</h3>
                            <p>User Registrations</p>
                        </div>
                        <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                            <path d="M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z"></path>
                        </svg>
                        <a href="#" class="small-box-footer link-dark link-underline-opacity-0 link-underline-opacity-50-hover">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box text-bg-danger">
                        <div class="inner">
                            <h3>65</h3>
                            <p>Employees</p>
                        </div>
                        <svg class="small-box-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                            <path clip-rule="evenodd" fill-rule="evenodd" d="M2.25 13.5a8.25 8.25 0 018.25-8.25.75.75 0 01.75.75v6.75H18a.75.75 0 01.75.75 8.25 8.25 0 01-16.5 0z"></path>
                            <path clip-rule="evenodd" fill-rule="evenodd" d="M12.75 3a.75.75 0 01.75-.75 8.25 8.25 0 018.25 8.25.75.75 0 01-.75.75h-7.5a.75.75 0 01-.75-.75V3z"></path>
                        </svg>
                        <a href="#" class="small-box-footer link-light link-underline-opacity-0 link-underline-opacity-50-hover">
                            More info <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>
                <!-- ./col -->
            </div>
            <!-- /.row -->

            <!-- Users Table Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Users Management</h3>
                            <div class="card-tools">
                                <div class="card-tools">
                                    <div class="input-group input-group-sm" style="width: 150px;">
                                        <input type="text" 
                                               name="search" 
                                               id="userSearch"
                                               class="form-control float-right" 
                                               placeholder="Search names..."
                                               value="{{ searchTerm|default('') }}">
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-default">
                                                <i class="bi bi-search"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body table-responsive p-0">
                            <table class="table table-hover text-nowrap">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Profile</th>
                                        <th>Full Name</th>
                                        <th>Email</th>
                                        <th>Roles</th>
                                        <th>Created At</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for user in users %}
                                    <tr>
                                        <td>{{ user.id }}</td>
                                        <td>
        <img src="{{ user.profileImage ? user.profileImage : asset('assets/back/assets/img/avatar.png') }}"
                                                 alt="User Avatar" 
                                                 class="img-circle elevation-2" 
                                                 style="width: 35px; height: 35px;">
                                        </td>
                                        <td>{{ user.firstName }} {{ user.lastName }}</td>
                                        <td>{{ user.email }}</td>
                                        <td>
                                            {% for role in user.roles %}
                                                <span class="badge bg-primary">{{ role }}</span>
                                            {% endfor %}
                                        </td>
                                        <td>{{ user.createdAt ? user.createdAt|date('Y-m-d H:i') : 'N/A' }}</td>
                                        <td>
                                            <div class="btn-group">
                                                <button type="button" 
                                                        class="btn btn-info btn-sm show-user-btn" 
                                                        data-user-id="{{ user.id }}"
                                                        data-user-firstname="{{ user.firstName }}"
                                                        data-user-lastname="{{ user.lastName }}"
                                                        data-user-email="{{ user.email }}"
                                                        data-user-roles="{{ user.roles|json_encode }}"
                                                        data-user-created="{{ user.createdAt ? user.createdAt|date('Y-m-d H:i') : 'N/A' }}"
                                                        data-user-image="{{ user.profileImage ? user.profileImage : asset('assets/back/assets/img/avatar.png') }}">
                                                    <i class="bi bi-eye"></i>
                                                </button>
                                                <a href="{{ path('back_user_delete', {'id': user.id}) }}" 
                                                   class="btn btn-danger btn-sm" 
                                                   onclick="return confirm('Are you sure you want to delete this user?')">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                    {% else %}
                                    <tr>
                                        <td colspan="7" class="text-center">No users found</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                        <!-- /.card-body -->
                        <div class="card-footer clearfix">
                            <ul class="pagination pagination-sm m-0 float-end">
                                <li class="page-item {{ currentPage <= 1 ? 'disabled' : '' }}">
                                    <a class="page-link pagination-link" href="#" data-page="{{ currentPage - 1 }}" {{ currentPage <= 1 ? 'disabled' : '' }}>«</a>
                                </li>
                                
                                {% for i in 1..maxPages %}
                                    <li class="page-item {{ currentPage == i ? 'active' : '' }}">
                                        <a class="page-link pagination-link" href="#" data-page="{{ i }}">{{ i }}</a>
                                    </li>
                                {% endfor %}
                                
                                <li class="page-item {{ currentPage >= maxPages ? 'disabled' : '' }}">
                                    <a class="page-link pagination-link" href="#" data-page="{{ currentPage + 1 }}" {{ currentPage >= maxPages ? 'disabled' : '' }}>»</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
            </div>
            <!-- /.row -->
        </div>
        <!--end::Container-->
    </div>
    <!--end::App Content-->

    <!-- User Modal -->
    <div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userModalLabel">User Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4 text-center mb-3">
                            <img id="userModalImage" src="" alt="User Avatar" class="img-circle elevation-2" style="width: 150px; height: 150px;">
                        </div>
                        <div class="col-md-8">
                            <form id="userEditForm">
                                <div class="mb-3">
                                    <label for="firstName" class="form-label">First Name</label>
                                    <input type="text" class="form-control" id="firstName" name="firstName">
                                </div>
                                <div class="mb-3">
                                    <label for="lastName" class="form-label">Last Name</label>
                                    <input type="text" class="form-control" id="lastName" name="lastName">
                                </div>
                                <div class="mb-3">
                                    <label for="email" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="email" name="email">
                                </div>
                                <div class="mb-3">
                                    <label for="roles" class="form-label">Roles</label>
                                    <input type="text" class="form-control" id="roles" readonly>
                                </div>
                                <div class="mb-3">
                                    <label for="createdAt" class="form-label">Created At</label>
                                    <input type="text" class="form-control" id="createdAt" readonly>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveUserChanges">Save changes</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        let currentUserId = null;
        let userModal = null;
        
        // Initialize the modal
        userModal = new bootstrap.Modal(document.getElementById('userModal'));
        
        // Show user modal
        document.querySelectorAll('.show-user-btn').forEach(button => {
            button.addEventListener('click', function() {
                const userData = this.dataset;
                currentUserId = userData.userId;
                
                document.getElementById('userModalImage').src = userData.userImage;
                document.getElementById('firstName').value = userData.userFirstname;
                document.getElementById('lastName').value = userData.userLastname;
                document.getElementById('email').value = userData.userEmail;
                document.getElementById('roles').value = userData.userRoles;
                document.getElementById('createdAt').value = userData.userCreated;
                
                userModal.show();
            });
        });
        
        // Close modal handlers
        document.querySelector('.btn-close').addEventListener('click', function() {
            userModal.hide();
        });
        
        document.querySelector('.btn-secondary').addEventListener('click', function() {
            userModal.hide();
        });
       
        
        // Save changes
        // Replace the delete confirmation
        document.querySelectorAll('.btn-danger').forEach(button => {
            button.onclick = function(e) {
                e.preventDefault();
                const deleteUrl = this.getAttribute('href');
                
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = deleteUrl;
                    }
                });
            };
        });
        
        // Replace the success/error alerts in save changes
        document.getElementById('saveUserChanges').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('userEditForm'));
            
            Swal.fire({
                title: 'Saving changes...',
                didOpen: () => {
                    Swal.showLoading();
                },
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false
            });
            
            fetch(`/admin/user/${currentUserId}/edit`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'User updated successfully',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        userModal.hide();
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: data.message || 'Error updating user'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'An error occurred while updating the user'
                });
            });
        });
    
        // Add live search functionality
        let searchTimeout;
        const searchInput = document.getElementById('userSearch');
        const tbody = document.querySelector('.table tbody');

        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            const searchTerm = this.value;

            searchTimeout = setTimeout(() => {
                fetch(`{{ path('back_dashboard') }}?search=${encodeURIComponent(searchTerm)}`, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    tbody.innerHTML = html;
                    // Reinitialize modal buttons for new content
                    initializeModalButtons();
                })
                .catch(error => console.error('Error:', error));
            }, 300); // 300ms delay to prevent too many requests
        });

        // Function to initialize modal buttons
        function initializeModalButtons() {
            document.querySelectorAll('.show-user-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const userData = this.dataset;
                    currentUserId = userData.userId;
                    
                    document.getElementById('userModalImage').src = userData.userImage;
                    document.getElementById('firstName').value = userData.userFirstname;
                    document.getElementById('lastName').value = userData.userLastname;
                    document.getElementById('email').value = userData.userEmail;
                    document.getElementById('roles').value = userData.userRoles;
                    document.getElementById('createdAt').value = userData.userCreated;
                    
                    userModal.show();
                });
            });
        }

        // Initialize modal buttons for initial content
        initializeModalButtons();
    });



     
    // Replace the existing pagination click handler
    document.addEventListener('click', function(e) {
        if (e.target.matches('.pagination-link') && !e.target.hasAttribute('disabled')) {
            e.preventDefault();
            const page = e.target.dataset.page;
            const searchTerm = document.getElementById('userSearch').value;
            
            fetch(`{{ path('back_dashboard') }}?page=${page}&search=${encodeURIComponent(searchTerm)}`, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(html => {
                document.querySelector('.table tbody').innerHTML = html;
                
                // Update pagination links
                document.querySelectorAll('.page-item').forEach(item => {
                    const link = item.querySelector('.pagination-link');
                    if (link) {
                        // Update active state
                        item.classList.toggle('active', link.dataset.page === page);
                        
                        // Update prev/next buttons
                        if (link.textContent === '«') {
                            link.dataset.page = parseInt(page) - 1;
                            item.classList.toggle('disabled', parseInt(page) <= 1);
                        } else if (link.textContent === '»') {
                            link.dataset.page = parseInt(page) + 1;
                            item.classList.toggle('disabled', parseInt(page) >= {{ maxPages }});
                        }
                    }
                });
                
                initializeModalButtons();
            })
            .catch(error => console.error('Error:', error));
        }
    });
    </script>
{% endblock %}