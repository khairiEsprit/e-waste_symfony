{% extends 'front/base.html.twig' %}

{% block title %}Participation List{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <style>
        /* Styles globaux améliorés */
        .participation-container {
            padding: 20px;
            margin: 80px auto 20px;
            max-width: 95%;
            transform: translateY(30px);
        }

        /* Conteneur des cartes */
        .cards-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        /* Design des cartes */
        .participation-card {
            background: linear-gradient(145deg, #F8F9FA, #E6ECEB);
            border-radius: 16px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transition: all 0.3s ease-in-out;
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(41, 171, 135, 0.3);
        }

        .participation-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            border-color: #2ECC71;
        }

        .participation-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(180deg, #2ECC71, #27AE60);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .participation-card:hover::before {
            opacity: 1;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1A3C34;
            margin: 0;
        }

        .card-id {
            font-size: 0.85rem;
            color: #FFFFFF;
            background: linear-gradient(135deg, #2ECC71, #27AE60);
            padding: 4px 8px;
            border-radius: 12px;
        }

        .card-content {
            display: grid;
            gap: 10px;
        }

        .card-field {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 0;
            border-bottom: 1px solid rgba(41, 171, 135, 0.2);
        }

        .card-field:last-child {
            border-bottom: none;
        }

        .field-label {
            font-size: 0.9rem;
            font-weight: 500;
            color: #6B7280;
        }

        .field-value {
            font-size: 0.95rem;
            font-weight: 500;
            color: #1A3C34;
        }

        .field-value.email {
            color: #2ECC71;
            font-weight: 600;
        }

        .card-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }

        /* En-tête */
        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            gap: 20px;
            flex-wrap: wrap;
        }

        /* Titre */
        .page-title {
            font-size: 2rem;
            color: #1A3C34;
            margin: 0;
            font-weight: 700;
            letter-spacing: -0.02em;
        }

        /* Barre de recherche */
        .search-form {
            flex-grow: 1;
            max-width: 450px;
            min-width: 250px;
        }

        .search-container {
            position: relative;
            transition: all 0.3s ease;
        }

        .search-input {
            width: 100%;
            padding: 12px 20px 12px 48px;
            border: 1px solid #E0E7E9;
            border-radius: 12px;
            background-color: #F9FAFB;
            color: #1A3C34;
            font-size: 1rem;
            font-weight: 400;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .search-input:focus {
            outline: none;
            border-color: #2ECC71;
            box-shadow: 0 0 0 4px rgba(41, 171, 135, 0.15);
            background-color: #FFFFFF;
        }

        .search-icon {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #6B7280;
            font-size: 1.2rem;
            pointer-events: none;
        }

        /* Bouton Create New */
        .create-btn {
            padding: 12px 24px;
            background: linear-gradient(135deg, #2ECC71 0%, #27AE60 100%);
            color: white;
            border-radius: 12px;
            text-decoration: none;
            font-size: 1rem;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(41, 171, 135, 0.2);
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .create-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(41, 171, 135, 0.3);
            background: linear-gradient(135deg, #27AE60 0%, #2ECC71 100%);
        }

        /* Boutons d'action */
        .action-btn {
            padding: 8px 16px;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .view-btn {
            background: linear-gradient(135deg, #2ECC71 0%, #27AE60 100%);
            color: white;
        }

        .edit-btn {
            background: linear-gradient(135deg, #1A3C34 0%, #2E4F4A 100%);
            color: white;
        }

        .delete-form {
            display: inline;
        }

        .delete-btn {
            background: linear-gradient(135deg, #E74C3C 0%, #C0392B 100%);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .action-btn:hover, .delete-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Pied de page */
        .footer {
            margin-top: 40px;
            text-align: center;
            color: #1A3C34;
            font-size: 0.95rem;
            background: #F9FAFB;
            padding: 20px;
            border-radius: 12px;
            border: 1px solid #E5E7EB;
            box-shadow: 0 2px 8px rgba(1, 50, 32, 0.05);
        }

        /* Message vide */
        .empty-message {
            padding: 20px;
            text-align: center;
            color: #1A3C34;
            font-size: 1rem;
            background: #F9FAFB;
            border-radius: 12px;
            margin: 10px 0;
        }

        /* Custom SweetAlert2 Styling */
        .swal2-title-custom {
            color: #E74C3C !important;
            font-size: 1.5rem !important;
            font-weight: 600 !important;
        }

        .swal2-html-custom {
            padding: 0 1rem !important;
        }

        .btn-confirm-delete {
            background: linear-gradient(145deg, #E74C3C, #C0392B) !important;
            color: white !important;
            border: none !important;
            padding: 10px 24px !important;
            border-radius: 8px !important;
            font-weight: 600 !important;
            transition: all 0.3s ease !important;
        }

        .btn-confirm-delete:hover {
            transform: translateY(-2px) !important;
            box-shadow: 0 4px 8px rgba(231, 76, 60, 0.3) !important;
        }

        .btn-cancel-delete {
            background: linear-gradient(145deg, #6B7280, #4B5563) !important;
            color: white !important;
            border: none !important;
            padding: 10px 24px !important;
            border-radius: 8px !important;
            font-weight: 600 !important;
            transition: all 0.3s ease !important;
        }

        .btn-cancel-delete:hover {
            transform: translateY(-2px) !important;
            box-shadow: 0 4px 8px rgba(108, 117, 125, 0.3) !important;
        }

        .swal2-close {
            color: #6B7280 !important;
            font-size: 1.5rem !important;
            transition: all 0.3s ease !important;
        }

        .swal2-close:hover {
            color: #E74C3C !important;
        }

        .swal2-popup {
            border-radius: 12px !important;
            box-shadow: 0 10px 30px rgba(0, 105, 62, 0.1) !important;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="participation-container">
        <!-- En-tête avec bouton et recherche -->
        <div class="header-container">
            <div style="display: flex; align-items: center; gap: 20px; flex-grow: 1;">
                <h1 class="page-title animate__animated animate__fadeInLeft">Participation List</h1>

                <!-- Barre de recherche -->
                <div class="search-form">
                    <div class="search-container">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" id="search-input" placeholder="Search by name, email, phone..."
                               class="search-input" value="{{ search_term }}">
                    </div>
                </div>
            </div>

            <a href="{{ path('app_participation_new') }}"
               class="create-btn animate__animated animate__fadeInRight">
                <i class="fas fa-plus"></i> Create New
            </a>
        </div>

        <!-- Conteneur des cartes -->
        <div class="cards-container" id="cards-container">
            {% for participation in participations %}
                <div class="participation-card animate__animated animate__fadeInUp">
                    <div class="card-header">
                        <h3 class="card-title">{{ participation.firstName }} {{ participation.lastName }}</h3>
                        <span class="card-id">ID: {{ participation.id }}</span>
                    </div>
                    <div class="card-content">
                        <div class="card-field">
                            <span class="field-label">Email</span>
                            <span class="field-value email">{{ participation.email }}</span>
                        </div>
                        <div class="card-field">
                            <span class="field-label">Phone</span>
                            <span class="field-value">{{ participation.phone }}</span>
                        </div>
                        <div class="card-field">
                            <span class="field-label">City</span>
                            <span class="field-value">{{ participation.city }}</span>
                        </div>
                        <div class="card-field">
                            <span class="field-label">Zip Code</span>
                            <span class="field-value">{{ participation.zipCode }}</span>
                        </div>
                        <div class="card-field">
                            <span class="field-label">Country</span>
                            <span class="field-value">{{ participation.country }}</span>
                        </div>
                    </div>
                    <div class="card-actions">
                        <a href="{{ path('app_participation_show', {'id': participation.id}) }}"
                           class="action-btn view-btn">
                            <i class="fas fa-eye"></i> View
                        </a>
                        <a href="{{ path('app_participation_edit', {'id': participation.id}) }}"
                           class="action-btn edit-btn">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <form method="post" action="{{ path('app_participation_delete', {'id': participation.id}) }}"
                              class="delete-form"
                              onsubmit="return confirmDelete(event, this);">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ participation.id) }}">
                            <button type="submit" class="delete-btn">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </form>
                    </div>
                </div>
            {% else %}
                <div class="empty-message">
                    <i class="fas fa-info-circle" style="margin-right: 8px;"></i>
                    No records found
                </div>
            {% endfor %}
        </div>

        <!-- Pied de page -->
        <div class="footer animate__animated animate__fadeInUp">
            ECO BYTE Tunisia<br>
            +216 54221044
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Include SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Effet de vague sur les boutons
            const buttons = document.querySelectorAll('.create-btn, .action-btn, .delete-btn');
            buttons.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    const ripple = document.createElement('span');
                    ripple.classList.add('ripple');
                    const rect = btn.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size/2;
                    const y = e.clientY - rect.top - size/2;
                    ripple.style.width = ripple.style.height = `${size}px`;
                    ripple.style.left = `${x}px`;
                    ripple.style.top = `${y}px`;
                    this.appendChild(ripple);
                    setTimeout(() => ripple.remove(), 600);
                });
            });

            // Recherche dynamique
            const searchInput = document.getElementById('search-input');
            const cards = document.querySelectorAll('.participation-card');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();

                cards.forEach(card => {
                    const cardText = card.textContent.toLowerCase();
                    if (cardText.includes(searchTerm)) {
                        card.style.display = '';
                        card.classList.add('animate__animated', 'animate__fadeInUp');
                    } else {
                        card.style.display = 'none';
                        card.classList.remove('animate__animated', 'animate__fadeInUp');
                    }
                });

                // Afficher le message "No records found" si aucune carte n'est visible
                const visibleCards = Array.from(cards).filter(card => card.style.display !== 'none');
                const emptyMessage = document.querySelector('.empty-message');
                if (visibleCards.length === 0 && emptyMessage) {
                    emptyMessage.style.display = 'block';
                } else if (emptyMessage) {
                    emptyMessage.style.display = 'none';
                }
            });

            // Animation au survol des cartes
            const participationCards = document.querySelectorAll('.participation-card');
            participationCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.classList.add('animate__animated', 'animate__pulse');
                });
                card.addEventListener('mouseleave', function() {
                    this.classList.remove('animate__animated', 'animate__pulse');
                });
            });
        });

        // Fonction de confirmation de suppression avec SweetAlert2
        function confirmDelete(event, form) {
            event.preventDefault();
            return new Promise((resolve) => {
                Swal.fire({
                    title: 'Confirmer la Suppression',
                    html: `
                        <div style="text-align: center; line-height: 1.6;">
                            <p style="font-size: 1.1rem; color: #333;">
                                Êtes-vous sûr de vouloir supprimer cette participation ?
                            </p>
                            <p style="font-size: 0.9rem; color: #666; margin-top: 10px;">
                                <strong>Attention :</strong> Cette action est irréversible.
                            </p>
                        </div>
                    `,
                    icon: 'warning',
                    iconColor: '#E74C3C',
                    showCancelButton: true,
                    confirmButtonText: '<i class="fas fa-trash-alt mr-2"></i> Supprimer',
                    cancelButtonText: '<i class="fas fa-times mr-2"></i> Annuler',
                    confirmButtonColor: '#E74C3C',
                    cancelButtonColor: '#6B7280',
                    background: '#FFFFFF',
                    backdrop: 'rgba(0, 105, 62, 0.2)',
                    customClass: {
                        popup: 'animate__animated animate__zoomIn',
                        title: 'swal2-title-custom',
                        htmlContainer: 'swal2-html-custom',
                        confirmButton: 'btn-confirm-delete',
                        cancelButton: 'btn-cancel-delete'
                    },
                    buttonsStyling: false,
                    showCloseButton: true,
                    focusCancel: true,
                    padding: '1.5rem',
                    width: '32rem'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                    resolve(result.isConfirmed);
                });
            });
        }
    </script>
{% endblock %}